<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accelerometer</name>
    </assembly>
    <members>
        <member name="T:accelerometer.AccelData">
            <summary>
            加速度データとジャイロデータを持つクラス
            </summary>
        </member>
        <member name="M:accelerometer.AccelData.#ctor(System.Int16,accelerometer.XYZData,accelerometer.XYZData)">
            <summary>
            加速度データのインスタンス生成
            </summary>
            <param name="time">時間</param>
            <param name="accel">加速度</param>
            <param name="gyro">角速度</param>
        </member>
        <member name="M:accelerometer.AccelData.#ctor(System.Byte[],accelerometer.dataType,accelerometer.SensorConfig)">
            <summary>
            加速度データのインスタンス生成
            </summary>
            <param name="byteData">20個の要素からなるバイト型配列</param>
            <param name="d">データタイプ</param>
            <param name="config">センサの設定情報</param>
        </member>
        <member name="M:accelerometer.AccelData.ReturnByNumber(System.Int32)">
            <summary>
            各値を番号で指定できるようにするメソッド
            </summary>
            <param name="num">0～2なら加速度の値、3～5なら角速度の値</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.AccelData.CreateTime(System.Byte[],accelerometer.Endian)">
            <summary>
            時刻を生成する
            </summary>
            <param name="data"></param>
            <param name="endian">エンディアン</param>
        </member>
        <member name="M:accelerometer.AccelData.ReturnData(System.Byte[],accelerometer.Endian,System.Int32)">
            <summary>
            byte型の配列からXYZData型のインスタンスを返すメソッド
            </summary>
            <param name="data">byte型の配列（6要素必要）</param>
            <param name="endian">エンディアン</param>
            <param name="byteNum">1データに使うバイト数</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.AccelData.ToString">
            <summary>
            デバッグ時に見やすい用
            </summary>
            <returns></returns>
        </member>
        <member name="M:accelerometer.AccelData.CSVFormat(accelerometer.dataType)">
            <summary>
            CSV出力するとき用
            </summary>
            <returns></returns>
        </member>
        <member name="P:accelerometer.AccelData.Time">
            <summary>
            時刻（int型）
            </summary>
        </member>
        <member name="P:accelerometer.AccelData.Accel">
            <summary>
            加速度
            </summary>
        </member>
        <member name="P:accelerometer.AccelData.Gyro">
            <summary>
            ジャイロ
            </summary>
        </member>
        <member name="T:accelerometer.dataType">
            <summary>
            取得するデータのタイプ
            </summary>
        </member>
        <member name="F:accelerometer.dataType.accel">
            <summary>
            加速度データのみ
            </summary>
        </member>
        <member name="F:accelerometer.dataType.gyro">
            <summary>
            角速度データのみ
            </summary>
        </member>
        <member name="F:accelerometer.dataType.both">
            <summary>
            加速度と角速度データの両方
            </summary>
        </member>
        <member name="T:accelerometer.SensorVer">
            <summary>
            センサの型番
            </summary>
        </member>
        <member name="F:accelerometer.SensorVer.WAA010">
            <summary>
            WAA-010
            </summary>
        </member>
        <member name="F:accelerometer.SensorVer.TSND121">
            <summary>
            TSND121
            </summary>
        </member>
        <member name="T:accelerometer.Endian">
            <summary>
            エンディアン
            </summary>
        </member>
        <member name="F:accelerometer.Endian.Little">
            <summary>
            リトルエンディアン
            </summary>
        </member>
        <member name="F:accelerometer.Endian.Big">
            <summary>
            ビッグエンディアン
            </summary>
        </member>
        <member name="T:accelerometer.SensorConfig">
            <summary>
            センサの設定情報を管理するクラス
            </summary>
        </member>
        <member name="M:accelerometer.SensorConfig.#ctor(accelerometer.SensorVer)">
            <summary>
            センサの設定情報を管理するクラス
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:accelerometer.SensorConfig.ToInt32(System.Byte[],accelerometer.Endian)">
            <summary>
            指定したエンディアンでデータを作成
            </summary>
            <param name="value"></param>
            <param name="endian"></param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.SensorConfig.GetTime(System.Byte[],accelerometer.Endian)">
            <summary>
            指定したエンディアンで時刻データを作成
            </summary>
            <param name="value"></param>
            <param name="endian"></param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.SensorConfig.MakeCommand(accelerometer.dataType,accelerometer.SensorVer,System.Int32,System.Int32)">
            <summary>
            string型の簡単なコマンドを生成する関数
            </summary>
            <param name="d">データタイプ</param>
            <param name="sensor">センサの型番</param>
            <param name="sampling">サンプリング周期</param>
            <param name="ave">何回の平均を出力するか</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.SensorConfig.MakeCommand(accelerometer.SensorVer,System.Byte[])">
            <summary>
            byte配列からXORを計算してBCCを付け加える関数
            </summary>
            <param name="sensor">センサの型番</param>
            <param name="withoutBcc">BCCより前のコマンド配列</param>
            <returns></returns>
        </member>
        <member name="P:accelerometer.SensorConfig.RequiredDataNum">
            <summary>
            データを形成するのに必要なバイト配列の要素数
            </summary>
        </member>
        <member name="P:accelerometer.SensorConfig.FixedData">
            <summary>
            データの先頭部分の固定された情報
            </summary>
        </member>
        <member name="P:accelerometer.SensorConfig.Endian">
            <summary>
            送られる情報のエンディアン
            </summary>
        </member>
        <member name="P:accelerometer.SensorConfig.Version">
            <summary>
            センサの型番
            </summary>
        </member>
        <member name="T:accelerometer.SensorData">
            <summary>
            AccelDataをリストとして保持するクラス
            </summary>
        </member>
        <member name="M:accelerometer.SensorData.#ctor(accelerometer.dataType,accelerometer.SensorVer)">
            <summary>
            センサデータを管理するクラス
            </summary>
            <param name="type">データタイプ（加速度のみ、角速度のみ、両方）</param>
            <param name="version">センサの型番</param>
        </member>
        <member name="M:accelerometer.SensorData.pushDataBuffer(System.Byte[])">
            <summary>
            シリアルポートからのデータを受け取りデータバッファに溜める
            もし、加速度データに変更できるだけの量が溜まれば加速度データに変換後、該当データは破棄
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:accelerometer.SensorData.pushData(accelerometer.AccelData)">
            <summary>
            SensorDataにAccelDataを追加するメソッド
            </summary>
            <param name="input">AccelData</param>
        </member>
        <member name="M:accelerometer.SensorData.ExtractData(System.Int32,System.Int32)">
            <summary>
            指定した番号から番号までのデータを返すメソッド
            </summary>
            <param name="head">頭の番号</param>
            <param name="tail">終わりの番号</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.SensorData.ExtractData(System.Int32)">
            <summary>
            後ろから指定した数分のデータを返すメソッド
            </summary>
            <param name="num">指定する数</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.SensorData.saveData(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            たまっているデータをcsvファイルとして保存する
            </summary>
            <param name="path">保存先のパス</param>
            <param name="enc">エンコード</param>
            <param name="isHeader">ヘッダーを入れるかどうか</param>
        </member>
        <member name="M:accelerometer.SensorData.pushDataBuffer(System.Byte)">
            <summary>
            シリアルポートからのデータを受け取りデータバッファに溜める
            もし加速度データに変更できるだけの量が溜まれば加速度データに変換後、該当データは破棄
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:accelerometer.SensorData.Encoding">
            <summary>
            エンコーディング
            </summary>
        </member>
        <member name="P:accelerometer.SensorData.CurrentFreq">
            <summary>
            サンプリング周波数
            </summary>
        </member>
        <member name="P:accelerometer.SensorData.Config">
            <summary>
            センサの設定情報
            </summary>
        </member>
        <member name="P:accelerometer.SensorData.AllData">
            <summary>
            格納されている全てのデータのリスト
            </summary>
        </member>
        <member name="P:accelerometer.SensorData.LastData">
            <summary>
            リストに保持されている最後のデータを返す
            </summary>
        </member>
        <member name="T:accelerometer.Statistics">
            <summary>
            統計計算をする静的クラス
            </summary>
        </member>
        <member name="M:accelerometer.Statistics.Mean(System.Collections.Generic.List{accelerometer.AccelData})">
            <summary>
            算術平均の計算
            </summary>
            <param name="data">AccelDataのリスト
            </param>
            <returns>0～2は加速度のX,Y,Z,3～5は角速度のX,Y,Z</returns>
        </member>
        <member name="M:accelerometer.Statistics.GetDescription(System.Object)">
            <summary>
            enum型のDescriptionを取得する関数
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="T:accelerometer.XYZData">
            <summary>
            加速度、角速度などxyzの3値から成るデータを表すクラス
            </summary>
        </member>
        <member name="M:accelerometer.XYZData.#ctor">
            <summary>
            x、y、zの値を持つクラスのインスタンスを生成
            </summary>
        </member>
        <member name="M:accelerometer.XYZData.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            x,y,zの値をもつクラスのインスタンスを生成
            </summary>
            <param name="x">x軸</param>
            <param name="y">y軸</param>
            <param name="z">z軸</param>
        </member>
        <member name="M:accelerometer.XYZData.ReturnByNumber(System.Int32)">
            <summary>
            各値を番号で指定できるようにするメソッド
            </summary>
            <param name="num">0ならx軸、1ならy軸、2ならz軸の値</param>
            <returns></returns>
        </member>
        <member name="M:accelerometer.XYZData.Size">
            <summary>
            ベクトルの大きさを返すメソッド（適当に作ってみた）
            </summary>
            <returns></returns>
        </member>
        <member name="M:accelerometer.XYZData.ToString">
            <summary>
            デバッグ時に見やすい用
            </summary>
            <returns></returns>
        </member>
        <member name="M:accelerometer.XYZData.CSVFormat">
            <summary>
            CSV出力するとき用
            </summary>
            <returns></returns>
        </member>
        <member name="P:accelerometer.XYZData.X">
            <summary>
            X軸データ
            </summary>
        </member>
        <member name="P:accelerometer.XYZData.Y">
            <summary>
            Y軸データ
            </summary>
        </member>
        <member name="P:accelerometer.XYZData.Z">
            <summary>
            Z軸データ
            </summary>
        </member>
    </members>
</doc>
